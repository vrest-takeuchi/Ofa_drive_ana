# Generated by Django 3.0.4 on 2020-12-20 17:03

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccelerationTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('nine_axis_acceleration_x', models.CharField(max_length=20)),
                ('nine_axis_acceleration_y', models.CharField(max_length=20)),
                ('nine_axis_acceleration_z', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'acceleration_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AngularvelocityTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('nine_axis_angular_velocity_x', models.CharField(max_length=20)),
                ('nine_axis_angular_velocity_y', models.CharField(max_length=20)),
                ('nine_axis_angular_velocity_z', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'angularvelocity_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CanAccelTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('can_accel', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'can_accel_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CanBrakeTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('can_brake', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'can_brake_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CanPositionTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('can_turn_lever_position', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'can_position_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CanSpeedTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('can_speed', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'can_speed_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CanSteeringTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('can_steering', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'can_steering_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EquipStatusTbl',
            fields=[
                ('equip_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('startup_st', models.TextField()),
                ('operation_st', models.TextField()),
                ('mqtt_st', models.TextField()),
                ('device_st', models.TextField()),
            ],
            options={
                'db_table': 'equip_status_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeomagnetismTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('nine_axis_geomagnetism_x', models.CharField(max_length=20)),
                ('nine_axis_geomagnetism_y', models.CharField(max_length=20)),
                ('nine_axis_geomagnetism_z', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'geomagnetism_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocationTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('gps_date', models.CharField(max_length=20)),
                ('latitude', models.CharField(max_length=20)),
                ('latitude_direction', models.CharField(max_length=20)),
                ('longitude', models.CharField(max_length=20)),
                ('longitude_direction', models.CharField(max_length=20)),
                ('velocity', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'location_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SatelliteTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('positioning_quality', models.CharField(max_length=20)),
                ('used_satellites', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'satellite_tbl',
                'managed': False,
            },
        ),
    ]
